{"version":3,"sources":["components/SortPropsPanel/SortPropsPanel.tsx","App.tsx","index.tsx"],"names":["SortPropsPanel","props","reverse","sortAlphabetically","reset","sortByLength","filterByLength","lettersLimit","lettersLimitValues","Array","fill","map","_","idx","className","type","onClick","name","value","onChange","index","selected","goodsFromServer","App","state","goods","showList","isReversed","sortBy","show","setState","prevState","e","newValue","currentTarget","Number","this","listToShow","filter","good","length","sort","g1","g2","localeCompare","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5915de0.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  reverse: () => void,\n  sortAlphabetically: () => void,\n  reset: () => void,\n  sortByLength: () => void,\n  filterByLength: (e: React.ChangeEvent<HTMLSelectElement>) => void,\n  lettersLimit: number\n};\n\nexport const SortPropsPanel: React.FC<Props> = (props) => {\n  const {\n    reverse,\n    sortAlphabetically,\n    reset,\n    sortByLength,\n    filterByLength,\n    lettersLimit,\n  } = props;\n\n  const lettersLimitValues = Array(10).fill(null).map((_, idx) => 1 + idx);\n\n  return (\n    <div className=\"app__sort-btn-container\">\n      <button\n        className=\"app__btn\"\n        type=\"button\"\n        onClick={reverse}\n      >\n        reverse\n      </button>\n\n      <button\n        className=\"app__btn\"\n        type=\"button\"\n        onClick={sortAlphabetically}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        className=\"app__btn\"\n        type=\"button\"\n        onClick={reset}\n      >\n        reset\n      </button>\n\n      <button\n        className=\"app__btn\"\n        type=\"button\"\n        onClick={sortByLength}\n      >\n        sort by length\n      </button>\n\n      <select\n        name=\"length\"\n        className=\"app__lettersCountFilter\"\n        value={lettersLimit}\n        onChange={filterByLength}\n      >\n        {lettersLimitValues\n          .map((_, index) => (\n            <option\n              value={lettersLimitValues[index]}\n              key={lettersLimitValues[index]}\n              selected={lettersLimitValues[index] === lettersLimit}\n            >\n              {`${lettersLimitValues[index]}+ letters`}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { SortPropsPanel } from './components/SortPropsPanel';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: Array<string>;\n  showList: boolean;\n  lettersLimit: number;\n  isReversed: boolean;\n  sortBy: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    showList: false,\n    lettersLimit: 1,\n    isReversed: false,\n    sortBy: 'none',\n  };\n\n  show = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      showList: !prevState.showList,\n    }));\n  };\n\n  reverse = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  filterByLength = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newValue = e.currentTarget.value;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      lettersLimit: Number(newValue),\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      sortBy: 'alph',\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      sortBy: 'leng',\n    }));\n  };\n\n  reset = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      sortBy: 'none',\n      isReversed: false,\n      lettersLimit: 1,\n    }));\n  };\n\n  render() {\n    const {\n      goods,\n      showList,\n      lettersLimit,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    const listToShow = goods.filter(good => good.length >= lettersLimit);\n\n    switch (sortBy) {\n      case 'alph':\n        listToShow.sort((g1, g2) => (g1.localeCompare(g2)));\n        break;\n\n      case 'leng':\n        listToShow.sort((g1, g2) => (g1.length - g2.length));\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      listToShow.reverse();\n    }\n\n    return (\n      <div className=\"app\">\n        {!showList && (\n          <button\n            className=\"app__btn\"\n            type=\"button\"\n            onClick={this.show}\n          >\n            show list\n          </button>\n        )}\n\n        {showList\n        && (\n          <>\n            <div className=\"app__list-container\">\n              <ul className=\"app__list-goods\">\n                {listToShow.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <SortPropsPanel\n              reverse={this.reverse}\n              sortAlphabetically={this.sortAlphabetically}\n              reset={this.reset}\n              sortByLength={this.sortByLength}\n              filterByLength={this.filterByLength}\n              lettersLimit={lettersLimit}\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}