{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","showList","lettersLimit","isReversed","sortBy","show","setState","prevState","reverse","filterByLength","e","newValue","currentTarget","value","Number","sortAlphabetically","sortByLength","reset","this","listToShow","filter","good","length","sort","g1","g2","localeCompare","className","type","onClick","map","name","onChange","Array","fill","_","index","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWWC,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,UAAU,EACVC,aAAc,EACdC,YAAY,EACZC,OAAQ,QANZ,EASEC,KAAO,WACL,EAAKC,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZN,UAAWM,EAAUN,eAZ3B,EAgBEO,QAAU,WACR,EAAKF,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZJ,YAAaI,EAAUJ,iBAnB7B,EAuBEM,eAAiB,SAACC,GAChB,IAAMC,EAAWD,EAAEE,cAAcC,MAEjC,EAAKP,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZL,aAAcY,OAAOH,SA5B3B,EAgCEI,mBAAqB,WACnB,EAAKT,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZH,OAAQ,aAnCd,EAuCEY,aAAe,WACb,EAAKV,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZH,OAAQ,aA1Cd,EA8CEa,MAAQ,WACN,EAAKX,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZH,OAAQ,OACRD,YAAY,EACZD,aAAc,QAnDpB,4CAuDE,WACE,MAMIgB,KAAKnB,MALPC,EADF,EACEA,MACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,OAGIe,EAAanB,EAAMoB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUpB,KAEvD,OAAQE,GACN,IAAK,OACHe,EAAWI,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGE,cAAcD,MAC9C,MAEF,IAAK,OACHN,EAAWI,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGF,OAASG,EAAGH,UAWhD,OAJInB,GACFgB,EAAWX,UAIX,sBAAKmB,UAAU,MAAf,WACI1B,GACA,wBACE0B,UAAU,WACVC,KAAK,SACLC,QAASX,KAAKb,KAHhB,uBASDJ,GAEC,qCACE,qBAAK0B,UAAU,sBAAf,SACE,oBAAIA,UAAU,kBAAd,SACGR,EAAWW,KAAI,SAAAT,GAAI,OAClB,6BACGA,GADMA,UAMf,sBAAKM,UAAU,0BAAf,UACE,wBACEA,UAAU,WACVC,KAAK,SACLC,QAASX,KAAKV,QAHhB,qBAOA,wBACEmB,UAAU,WACVC,KAAK,SACLC,QAASX,KAAKH,mBAHhB,iCAOA,wBACEY,UAAU,WACVC,KAAK,SACLC,QAASX,KAAKD,MAHhB,mBAOA,wBACEU,UAAU,WACVC,KAAK,SACLC,QAASX,KAAKF,aAHhB,4BAOA,wBACEe,KAAK,SACLJ,UAAU,0BACVd,MAAOX,EACP8B,SAAUd,KAAKT,eAJjB,SAMI,IAAIwB,MAAM,IACTC,KAAK,MACLJ,KAAI,SAACK,EAAGC,GAAJ,OACH,wBACEvB,MAAOuB,EAAQ,EAGfC,SAAUD,EAAQ,IAAMlC,EAJ1B,mBAMMkC,EAAQ,EANd,cAGOA,EAAQ,qBApJnC,GAAyBE,IAAMC,WCrB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.23b64005.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: Array<string>;\n  showList: boolean;\n  lettersLimit: number;\n  isReversed: boolean;\n  sortBy: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    showList: false,\n    lettersLimit: 1,\n    isReversed: false,\n    sortBy: 'none',\n  };\n\n  show = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      showList: !prevState.showList,\n    }));\n  };\n\n  reverse = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  filterByLength = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newValue = e.currentTarget.value;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      lettersLimit: Number(newValue),\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      sortBy: 'alph',\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      sortBy: 'leng',\n    }));\n  };\n\n  reset = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      sortBy: 'none',\n      isReversed: false,\n      lettersLimit: 1,\n    }));\n  };\n\n  render() {\n    const {\n      goods,\n      showList,\n      lettersLimit,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    const listToShow = goods.filter(good => good.length >= lettersLimit);\n\n    switch (sortBy) {\n      case 'alph':\n        listToShow.sort((g1, g2) => (g1.localeCompare(g2)));\n        break;\n\n      case 'leng':\n        listToShow.sort((g1, g2) => (g1.length - g2.length));\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      listToShow.reverse();\n    }\n\n    return (\n      <div className=\"app\">\n        {!showList && (\n          <button\n            className=\"app__btn\"\n            type=\"button\"\n            onClick={this.show}\n          >\n            show list\n          </button>\n        )}\n\n        {showList\n        && (\n          <>\n            <div className=\"app__list-container\">\n              <ul className=\"app__list-goods\">\n                {listToShow.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"app__sort-btn-container\">\n              <button\n                className=\"app__btn\"\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                reverse\n              </button>\n              <button\n                className=\"app__btn\"\n                type=\"button\"\n                onClick={this.sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                className=\"app__btn\"\n                type=\"button\"\n                onClick={this.reset}\n              >\n                reset\n              </button>\n              <button\n                className=\"app__btn\"\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                sort by length\n              </button>\n              <select\n                name=\"length\"\n                className=\"app__lettersCountFilter\"\n                value={lettersLimit}\n                onChange={this.filterByLength}\n              >\n                {(new Array(10))\n                  .fill(null)\n                  .map((_, index) => (\n                    <option\n                      value={index + 1}\n                      // eslint-disable-next-line\n                      key={index + 1}\n                      selected={index + 1 === lettersLimit}\n                    >\n                      {`${index + 1}+ letters`}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}